name: master pipeline , developpment build

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10


jobs:
  proxy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Login docker
        run: docker login https://docker.pkg.github.com -u berlingoqc -p $GITHUB_ACCESS_TOKEN
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.PAT }}
      - name: Download vendors
        run: ./scripts/rust_env.sh cargo vendor && ./scripts/rust_env.sh make -C ./drivers
      - name: Build ARMv7
        run: ./scripts/rust_env.sh make -C ./drivers clean && ./scripts/rust_env.sh make -C ./drivers CC=arm-linux-gnueabihf-gcc && ./scripts/rust_env.sh cargo build --target armv7-unknown-linux-gnueabihf --release
      - name: Build ARMv6
        run: ./scripts/rust_env.sh cargo build --target arm-unknown-linux-gnueabihf --release
      - name: Create release folder
        run: mkdir -p release && cp ./target/release/growbe-mainboard ./release/growbe-mainboard-x86_64-linux && cp ./target/armv7-unknown-linux-gnueabihf/release/growbe-mainboard ./release/growbe-mainboard-arm-linux && cp ./target/arm-unknown-linux-gnueabihf/release/growbe-mainboard ./release/growbe-mainboard-armv6-linux
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: true
          prerelease: false
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Release"
          files: |
            ./release/*
      - name: Notify
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'The project {{ EVENT_PAYLOAD.repository.full_name }} has been release ${{ github.ref }}